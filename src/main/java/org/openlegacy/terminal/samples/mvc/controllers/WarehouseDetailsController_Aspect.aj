// WARNING: DO NOT EDIT THIS FILE.
// You may push code into the target .java compilation unit if you wish to edit any member(s).
package org.openlegacy.terminal.samples.mvc.controllers;

import java.io.IOException;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Map;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;

import org.apache.commons.io.IOUtils;
import org.openlegacy.terminal.ScreenEntity;
import org.openlegacy.terminal.actions.TerminalActions;
import org.openlegacy.terminal.json.JsonSerializationUtil;
import org.openlegacy.terminal.samples.model.WarehouseDetails;
import org.openlegacy.terminal.services.ScreenEntitiesRegistry;
import org.springframework.beans.propertyeditors.CustomDateEditor;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.ui.Model;
import org.springframework.web.bind.WebDataBinder;
import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

privileged @SuppressWarnings("unused") aspect WarehouseDetailsController_Aspect {

	@Inject
	private ScreenEntitiesRegistry WarehouseDetailsController.screenEntitiesRegistry;

	// handle page initial display
    @RequestMapping(method = RequestMethod.GET)
    public String WarehouseDetailsController.show(Model uiModel) {
    	WarehouseDetails warehouseDetails = terminalSession.getEntity(WarehouseDetails.class);
	uiModel.addAttribute("warehouseDetails", warehouseDetails);
	// show the resulting page for WarehouseDetails
        return "WarehouseDetails";
    }

    @RequestMapping(value="/help", method = RequestMethod.GET)
    public @ResponseBody String WarehouseDetailsController.systemHelp(HttpServletRequest request) throws IOException {
    	URL resource = request.getSession().getServletContext().getResource("/help/WarehouseDetails.html");
    	String result = "";
    	if (resource != null){
    		result = IOUtils.toString(resource.openStream());
    	}
    	return result;
    }
    
	// handle submit action
    @RequestMapping(method = RequestMethod.POST)
    public String WarehouseDetailsController.submit(WarehouseDetails warehouseDetails, Model uiModel, HttpServletRequest httpServletRequest) {
	ScreenEntity resultScreenEntity = terminalSession.doAction(TerminalActions.ENTER(), warehouseDetails);
	// go to the controller for the resulting screen name
		if (resultScreenEntity != null){
			String screenEntityName = screenEntitiesRegistry.get(resultScreenEntity.getClass()).getEntityClassName();
			if (httpServletRequest.getParameter("partial") != null){
				warehouseDetails = terminalSession.getEntity(WarehouseDetails.class);
		    	uiModel.addAttribute("warehouseDetails", warehouseDetails);
		        return "WarehouseDetails";
			}
        	return "redirect:" + screenEntityName;
		}
    	return "redirect:/";
		
    }
    
	// handle help action
    @RequestMapping(params="action=help", method = RequestMethod.POST)
    public String WarehouseDetailsController.help(WarehouseDetails warehouseDetails, Model uiModel, HttpServletRequest httpServletRequest) {
	ScreenEntity resultScreenEntity = terminalSession.doAction(TerminalActions.F1(), warehouseDetails);
	// go to the controller for the resulting screen name
		if (resultScreenEntity != null){
			String screenEntityName = screenEntitiesRegistry.get(resultScreenEntity.getClass()).getEntityClassName();
			if (httpServletRequest.getParameter("partial") != null){
				warehouseDetails = terminalSession.getEntity(WarehouseDetails.class);
		    	uiModel.addAttribute("warehouseDetails", warehouseDetails);
		        return "WarehouseDetails";
			}
        	return "redirect:" + screenEntityName;
		}
    	return "redirect:/";
		
    }
	// handle prompt action
    @RequestMapping(params="action=prompt", method = RequestMethod.POST)
    public String WarehouseDetailsController.prompt(WarehouseDetails warehouseDetails, Model uiModel, HttpServletRequest httpServletRequest) {
	ScreenEntity resultScreenEntity = terminalSession.doAction(TerminalActions.F4(), warehouseDetails);
	// go to the controller for the resulting screen name
		if (resultScreenEntity != null){
			String screenEntityName = screenEntitiesRegistry.get(resultScreenEntity.getClass()).getEntityClassName();
			if (httpServletRequest.getParameter("partial") != null){
				warehouseDetails = terminalSession.getEntity(WarehouseDetails.class);
		    	uiModel.addAttribute("warehouseDetails", warehouseDetails);
		        return "WarehouseDetails";
			}
        	return "redirect:" + screenEntityName;
		}
    	return "redirect:/";
		
    }
	// handle cancel action
    @RequestMapping(params="action=cancel", method = RequestMethod.POST)
    public String WarehouseDetailsController.cancel(WarehouseDetails warehouseDetails, Model uiModel, HttpServletRequest httpServletRequest) {
	ScreenEntity resultScreenEntity = terminalSession.doAction(TerminalActions.F12(), warehouseDetails);
	// go to the controller for the resulting screen name
		if (resultScreenEntity != null){
			String screenEntityName = screenEntitiesRegistry.get(resultScreenEntity.getClass()).getEntityClassName();
			if (httpServletRequest.getParameter("partial") != null){
				warehouseDetails = terminalSession.getEntity(WarehouseDetails.class);
		    	uiModel.addAttribute("warehouseDetails", warehouseDetails);
		        return "WarehouseDetails";
			}
        	return "redirect:" + screenEntityName;
		}
    	return "redirect:/";
		
    }
	// handle delete action
    @RequestMapping(params="action=delete", method = RequestMethod.POST)
    public String WarehouseDetailsController.delete(WarehouseDetails warehouseDetails, Model uiModel, HttpServletRequest httpServletRequest) {
	ScreenEntity resultScreenEntity = terminalSession.doAction(TerminalActions.F2(), warehouseDetails);
	// go to the controller for the resulting screen name
		if (resultScreenEntity != null){
			String screenEntityName = screenEntitiesRegistry.get(resultScreenEntity.getClass()).getEntityClassName();
			if (httpServletRequest.getParameter("partial") != null){
				warehouseDetails = terminalSession.getEntity(WarehouseDetails.class);
		    	uiModel.addAttribute("warehouseDetails", warehouseDetails);
		        return "WarehouseDetails";
			}
        	return "redirect:" + screenEntityName;
		}
    	return "redirect:/";
		
    }
	
	
	// handle ajax request for warehouseType field
	@RequestMapping(value="/warehouseTypeValues", method = RequestMethod.GET)
    @ResponseBody
	public ResponseEntity<String> WarehouseDetailsController.WarehouseTypeJson() {
    	WarehouseDetails warehouseDetails = terminalSession.getEntity(WarehouseDetails.class);
    	
		HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/text; charset=utf-8");
		Map<Object,Object> warehouseTypeValues = warehouseDetails.getWarehouseTypeValues();
		
		String result = JsonSerializationUtil.toDojoFormat(warehouseTypeValues);
        return new ResponseEntity<String>(result, headers, HttpStatus.OK);
    }
	
	@InitBinder
	public void WarehouseDetailsController.initBinder(WebDataBinder binder) {
		SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
		dateFormat.setLenient(false);
		binder.registerCustomEditor(Date.class, new CustomDateEditor(dateFormat, false));
	}
	
}
